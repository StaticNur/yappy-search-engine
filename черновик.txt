ssh -i C:\Users\ZenBook/.ssh/cloudru_rsa user1@192.144.12.231

scp M:/projectsPortfolio/yappy-search-engine/search-engine/src/main/resources/датасет-видео-тег.xlsx user1@192.144.12.231:/opt/yappy/

mvn clean
mvn clean install

/opt/yappy/датасет-видео-тег.xlsx

sudo apt install openjdk-17-jdk

sudo chown -R 1000:1000 elasticsearch_data
sudo chmod -R 777 elasticsearch_data
docker restart odfe-node

sudo usermod -aG docker user1
sudo service docker restart
docker restart odfe-node

sudo docker inspect odfe-node

nc -zv 192.144.12.231 9200


sudo docker restart $(sudo docker ps -q)

sudo docker logs postgres_db
sudo docker logs odfe-node
sudo docker logs search-engine

sudo docker stop $(sudo docker ps -q)

sudo docker-compose up

sudo docker rm $(sudo docker ps -a -q)
sudo docker rmi $(sudo docker images -q)

sudo docker ps
sudo docker stop f8f1a671bf89
sudo docker rm f8f1a671bf89

sudo docker images



psql -U postgres -h 192.144.12.231 -p 5433

sudo apt-get install postgresql-client

postgres=# CREATE SCHEMA VIDEO_DATA;
CREATE SCHEMA
postgres=# CREATE TABLE VIDEO_DATA.videos (
postgres(#     id BIGSERIAL PRIMARY KEY,
postgres(#     uuid UUID NOT NULL,
postgres(#     url VARCHAR(512) NOT NULL,
postgres(#     title VARCHAR(255),
postgres(#     description_user TEXT,
postgres(#     description_ml TEXT,
postgres(#     tags VARCHAR(255),
postgres(#     created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
postgres(#     popularity INT,
postgres(#     embedding_audio TEXT NULL,
postgres(#     embedding_visual TEXT NULL,
postgres(#     embedding_user_description TEXT NULL,
postgres(#     embedding_ml_description TEXT NULL
postgres(# );
CREATE TABLE

sudo apt-get remove --purge postgresql-client-common
sudo apt-get autoremove
sudo apt-get clean


sudo docker rmi $(sudo docker images -q)


  {
  "size": 5,
  "query": {
    "script_score": {
      "query": { "match_all": {} },
      "script": {
        "source": "cosineSimilarity(params.queryVector, 'embedding') + 1.0",
        "params": {
          "queryVector": [5.8, 5.2, 5.7, 5.8, 7.9]
        }
      }
    }
  }
}


odfe-node:
    image: amazon/opendistro-for-elasticsearch:1.13.2
    container_name: odfe-node
    environment:
      - discovery.type=single-node
      - cluster.name=my-cluster # укажите ваше имя кластера
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # настройка размера Java heap
      - "OPENDISTRO_SECURITY_DISABLED=true" # отключение безопасности для простоты тестирования (не рекомендуется в продакшене)
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - odfe-net


{
  "size": 5,
  "query": {
    "script_score": {
      "query": { "match_all": {} },
      "script": {
        "source": "if (doc['embedding'].size() == 0) { return 0.0; } else { def score = cosineSimilarity(params.queryVector, 'embedding') + 1.0; if (Double.isNaN(score) || score < 0) { return 0.0; } else { return score; } }",
        "params": {
          "queryVector": [0.0, 0.0, 0.0, 0.0, 0.0]
        }
      }
    }
  }
}


CREATE SCHEMA VIDEO_DATA;

CREATE TABLE VIDEO_DATA.videos (
    id BIGSERIAL PRIMARY KEY,
    uuid UUID NOT NULL,
    url VARCHAR(512) NOT NULL,
    title VARCHAR(255),
    description_user TEXT,
    description_ml TEXT,
    tags VARCHAR(255),
    created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    popularity INT,
    embedding_audio TEXT NULL, 
    embedding_visual TEXT NULL, 
    embedding_user_description TEXT NULL, 
    embedding_ml_description TEXT NULL
);

commit 

INSERT INTO VIDEO_DATA.videos (
    uuid, url, title, description_user, description_ml, tags, popularity, embedding_audio, embedding_visual, embedding_user_description, embedding_ml_description
) VALUES (
    '123e4567-e89b-12d3-a456-426614174001', 
    'http://example.com/video', 
    'Sample Video', 
    'User This is a sample video description.', 
    'ML description.', 
    34534655, 
    '#sample, #video', 
    ARRAY[1.23],
    ARRAY[1.23, 4.56, 7.89,1.23, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89],
    ARRAY[1.23,  7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89, 4.56, 7.89,1.23, 4.56, 7.89],
    ARRAY[1.23, 4.56, 7.89, 4.56, 7.89]
);


select count(*) from video_data.videos;

select * from video_data.videos;

select * from video_data.videos where url='https://cdn-st.rutubelist.ru/media/39/6c/b31bc6864bef9d8a96814f1822ca/fhd.mp4';
select * from video_data.videos where tags='#красивыедевушки #грудь #boobs #мороженное';



DELETE FROM video_data.videos WHERE url='https://cdn-st.rutubelist.ru/media/46/12/f9758356405fabd9f8b58e2f421c/fhd.mp4';
TRUNCATE TABLE video_data.videos;
DROP TABLE IF EXISTS video_data.videos;
